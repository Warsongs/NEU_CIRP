<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sun.dao.InformationMapper">
    <resultMap id="BaseResultMap" type="com.sun.model.Information">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="topic" property="topic" jdbcType="VARCHAR"/>
        <result column="is_anony" property="isAnony" jdbcType="BIT"/>
        <result column="activity_time" property="activityTime" jdbcType="VARCHAR"/>
        <result column="contact_id" property="contactId" jdbcType="VARCHAR"/>
        <result column="phone_num" property="phoneNum" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="yn" property="yn" jdbcType="BIT"/>
        <result column="ts" property="ts" jdbcType="TIMESTAMP"/>
        <result column="createDate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="deleteDate" property="deletedate" jdbcType="TIMESTAMP"/>
        <result column="pic_url" property="picUrl" jdbcType="VARCHAR"/>
        <result column="readNum" property="readCount" jdbcType="INTEGER"/>
        <result column="favNum" property="favCount" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMapWithUserAndTypeInfo" type="com.sun.model.Information"
               extends="BaseResultMap">
        <association property="user" column="user_id" select="com.sun.dao.UserMapper.selectByPrimaryKey"/>
        <association property="typeInfo" column="type_id" select="com.sun.dao.TypeInfoMapper.selectByPrimaryKey"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, type_id, location, topic, is_anony, activity_time, contact_id, phone_num, 
    content, yn, ts, createDate, deleteDate,pic_url
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sun.model.InformationExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleWithUserAndTypeInfo" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="com.sun.model.InformationExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleOrderByTime" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="com.sun.model.InformationExample">
select
i.id, i.user_id, i.type_id, i.location, i.topic, i.is_anony, i.activity_time, i.contact_id, i.phone_num,
    i.content, i.yn, i.ts, i.createDate, i.deleteDate,i.pic_url,t.readNum,r.favNum
from
information i
,(select info_id,sum(is_read) as readNum from info_fav_read group by info_id) t
,(select info_id,sum(is_fav) as favNum from info_fav_read group by info_id) r
where
i.id=t.info_id and i.id=r.info_id order by createDate desc
    </select>
    <select id="selectByExampleOrderByViewAndTime" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="com.sun.model.InformationExample">
select
i.id, i.user_id, i.type_id, i.location, i.topic, i.is_anony, i.activity_time, i.contact_id, i.phone_num,
    i.content, i.yn, i.ts, i.createDate, i.deleteDate,i.pic_url,t.readNum,r.favNum
from
information i
,(select info_id,sum(is_read) as readNum from info_fav_read group by info_id) t
,(select info_id,sum(is_fav) as favNum from info_fav_read group by info_id) r
where
i.id=t.info_id and i.id=r.info_id order by readNum desc,createDate desc
  </select>
    <select id="selectByExampleOrderByFav" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="com.sun.model.InformationExample">
select
i.id, i.user_id, i.type_id, i.location, i.topic, i.is_anony, i.activity_time, i.contact_id, i.phone_num,
    i.content, i.yn, i.ts, i.createDate, i.deleteDate,i.pic_url,t.readNum,r.favNum
from
information i
,(select info_id,count(*) as readNum from info_fav_read group by info_id) t
,(select info_id,count(*) as favNum from info_fav_read where is_fav=1 group by info_id) r
where
i.id=t.info_id and i.id=r.info_id order by favNum desc,readNum desc,createDate desc;
  </select>
    <select id="selectByUseridOrderByView" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="string">
SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i,
	(
		SELECT
			info_id,
			sum(is_read) AS readNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) t,
	(
		SELECT
			info_id,
			sum(is_fav) AS favNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) r
WHERE
	i.id = t.info_id
AND i.id = r.info_id
AND id IN (
	SELECT
		info_id
	FROM
		info_fav_read
	WHERE
		user_id = #{userid}
	AND is_read = 1
)
ORDER BY
	readNum DESC,
	createDate DESC
    </select>
    <select id="selectByUseridOrderByFav" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="string">
        SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i,
	(
		SELECT
			info_id,
			sum(is_read) AS readNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) t,
	(
		SELECT
			info_id,
			sum(is_fav) AS favNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) r
WHERE
	i.id = t.info_id
AND i.id = r.info_id
AND id IN (
	SELECT
		info_id
	FROM
		info_fav_read
	WHERE
		user_id = #{userid}
	AND is_read = 1
)
ORDER BY
	favNum DESC,
	createDate DESC
    </select>
    <select id="selectByUseridOrderByPost" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="string">
   SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i
LEFT OUTER JOIN (
	SELECT
		info_id,
		sum(is_read) AS readNum
	FROM
		info_fav_read
	GROUP BY
		info_id
) t ON (i.id = t.info_id)
LEFT OUTER JOIN (
	SELECT
		info_id,
		sum(is_fav) AS favNum
	FROM
		info_fav_read
	GROUP BY
		info_id
) r ON (i.id = r.info_id)
WHERE
	i.user_id = #{userid}
ORDER BY i.createDate
    </select>

    <select id="selectByTypeid" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="java.lang.Integer">
        SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i,
	(
		SELECT
			info_id,
			sum(is_read) AS readNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) t,
	(
		SELECT
			info_id,
			sum(is_fav) AS favNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) r
WHERE
	i.id = t.info_id
AND i.id = r.info_id
AND i.type_id = #{typeid}
ORDER BY
	favNum DESC,
	createDate DESC
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i,
	(
		SELECT
			info_id,
			count(*) AS readNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) t,
	(
		SELECT
			info_id,
			count(*) AS favNum
		FROM
			info_fav_read
		WHERE
			is_fav = 1
		GROUP BY
			info_id
	) r
WHERE
	i.id = t.info_id
AND i.id = r.info_id
AND i.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKeyWithUserAndTypeInfo" resultMap="BaseResultMapWithUserAndTypeInfo"
            parameterType="java.lang.Integer">
        SELECT
	i.id,
	i.user_id,
	i.type_id,
	i.location,
	i.topic,
	i.is_anony,
	i.activity_time,
	i.contact_id,
	i.phone_num,
	i.content,
	i.yn,
	i.ts,
	i.createDate,
	i.deleteDate,
	i.pic_url,
	t.readNum,
	r.favNum
FROM
	information i,
	(
		SELECT
			info_id,
			count(*) AS readNum
		FROM
			info_fav_read
		GROUP BY
			info_id
	) t,
	(
		SELECT
			info_id,
			count(*) AS favNum
		FROM
			info_fav_read
		WHERE
			is_fav = 1
		GROUP BY
			info_id
	) r
WHERE
	i.id = t.info_id
AND i.id = r.info_id
AND i.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.sun.model.InformationExample">
        delete from information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sun.model.Information">
    insert into information (id, user_id, type_id, 
      location, topic, is_anony, 
      activity_time, contact_id, phone_num, 
      content, yn, ts, createDate, 
      deleteDate,pic_url)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{location,jdbcType=VARCHAR}, #{topic,jdbcType=VARCHAR}, #{isAnony,jdbcType=BIT}, 
      #{activityTime,jdbcType=VARCHAR}, #{contactId,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, #{yn,jdbcType=BIT}, #{ts,jdbcType=TIMESTAMP}, #{createdate,jdbcType=TIMESTAMP}, 
      #{deletedate,jdbcType=TIMESTAMP},#{pic_url,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.sun.model.Information">
        insert into information
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="topic != null">
                topic,
            </if>
            <if test="isAnony != null">
                is_anony,
            </if>
            <if test="activityTime != null">
                activity_time,
            </if>
            <if test="contactId != null">
                contact_id,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="yn != null">
                yn,
            </if>
            <if test="ts != null">
                ts,
            </if>
            <if test="createdate != null">
                createDate,
            </if>
            <if test="deletedate != null">
                deleteDate,
            </if>
            <if test="picUrl != null">
                pic_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                #{topic,jdbcType=VARCHAR},
            </if>
            <if test="isAnony != null">
                #{isAnony,jdbcType=BIT},
            </if>
            <if test="activityTime != null">
                #{activityTime,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                #{contactId,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null">
                #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="yn != null">
                #{yn,jdbcType=BIT},
            </if>
            <if test="ts != null">
                #{ts,jdbcType=TIMESTAMP},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedate != null">
                #{deletedate,jdbcType=TIMESTAMP},
            </if>
            <if test="picUrl != null">
                #{picUrl,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sun.model.InformationExample" resultType="java.lang.Integer">
        select count(*) from information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update information
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.typeId != null">
                type_id = #{record.typeId,jdbcType=INTEGER},
            </if>
            <if test="record.location != null">
                location = #{record.location,jdbcType=VARCHAR},
            </if>
            <if test="record.topic != null">
                topic = #{record.topic,jdbcType=VARCHAR},
            </if>
            <if test="record.isAnony != null">
                is_anony = #{record.isAnony,jdbcType=BIT},
            </if>
            <if test="record.activityTime != null">
                activity_time = #{record.activityTime,jdbcType=VARCHAR},
            </if>
            <if test="record.contactId != null">
                contact_id = #{record.contactId,jdbcType=VARCHAR},
            </if>
            <if test="record.phoneNum != null">
                phone_num = #{record.phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.yn != null">
                yn = #{record.yn,jdbcType=BIT},
            </if>
            <if test="record.ts != null">
                ts = #{record.ts,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createdate != null">
                createDate = #{record.createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deletedate != null">
                deleteDate = #{record.deletedate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.picUrl != null">
                pic_url = #{record.picUrl,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update information
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=VARCHAR},
        type_id = #{record.typeId,jdbcType=INTEGER},
        location = #{record.location,jdbcType=VARCHAR},
        topic = #{record.topic,jdbcType=VARCHAR},
        is_anony = #{record.isAnony,jdbcType=BIT},
        activity_time = #{record.activityTime,jdbcType=VARCHAR},
        contact_id = #{record.contactId,jdbcType=VARCHAR},
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=VARCHAR},
        yn = #{record.yn,jdbcType=BIT},
        ts = #{record.ts,jdbcType=TIMESTAMP},
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
        deleteDate = #{record.deletedate,jdbcType=TIMESTAMP},
        pic_url = #{record.picUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sun.model.Information">
        update information
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                topic = #{topic,jdbcType=VARCHAR},
            </if>
            <if test="isAnony != null">
                is_anony = #{isAnony,jdbcType=BIT},
            </if>
            <if test="activityTime != null">
                activity_time = #{activityTime,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                contact_id = #{contactId,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="yn != null">
                yn = #{yn,jdbcType=BIT},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=TIMESTAMP},
            </if>
            <if test="createdate != null">
                createDate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedate != null">
                deleteDate = #{deletedate,jdbcType=TIMESTAMP},
            </if>
            <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sun.model.Information">
    update information
    set user_id = #{userId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      topic = #{topic,jdbcType=VARCHAR},
      is_anony = #{isAnony,jdbcType=BIT},
      activity_time = #{activityTime,jdbcType=VARCHAR},
      contact_id = #{contactId,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      yn = #{yn,jdbcType=BIT},
      ts = #{ts,jdbcType=TIMESTAMP},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      deleteDate = #{deletedate,jdbcType=TIMESTAMP},
      pic_url = #{picUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>